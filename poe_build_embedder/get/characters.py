# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/00_get.characters.ipynb.

# %% auto 0
__all__ = ['POE_URI', 'Requester']

# %% ../../nbs/00_get.characters.ipynb 3
import numpy as np
import pandas as pd
import requests
from traceback import format_exc
from tinydb import TinyDB, Query
from tqdm import tqdm

# %% ../../nbs/00_get.characters.ipynb 5
POE_URI = "https://www.pathofexile.com"


class Requester:
    def __init__(self) -> None:
        self.client = requests.session()
        self.client.headers.update({"User-Agent": "POE-Character-Embedder"})

    def get(self, url: str, params: dict = {}, ignore_exception: bool = False) -> dict:
        try:
            response = self.client.get(url=url, params=params)

            if response.status_code != 200:
                if not ignore_exception:
                    raise Exception(
                        f"Error: failed to make successful call to {url} with status code {response.status_code}"
                    )
                else:
                    return {}

        except (
            requests.ConnectTimeout,
            requests.HTTPError,
            requests.ReadTimeout,
            requests.Timeout,
            ConnectionError,
        ):
            self.logger.error(f"Error on get...\n{format_exc()}")

        return response.json()

    def get_character_tree(self, account: str, character: str, **get_kwargs) -> dict:
        # /character-window/get-passive-skills?reqData=0&accountName={account_name}&realm=pc&character={character_name}
        url = POE_URI + f"/character-window/get-passive-skills?reqData=0&accountName={account}&realm=pc&character={character}"
        return self.get(url, **get_kwargs)
    
    def get_character_items(self, account: str, character: str, **get_kwargs) -> dict:
        url=f"{POE_URI}/character-window/get-items"
        params={"accountName": account, "character": character}
        return self.get(url, params=params, **get_kwargs)
